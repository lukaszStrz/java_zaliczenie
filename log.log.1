DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Book [PESSIMISTIC_READ]: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Book [PESSIMISTIC_WRITE]: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Book [OPTIMISTIC]: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.java.java_zaliczenie.Book: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.java.java_zaliczenie.Book: select book0_.Book_isbn as Book1_3_0_, book0_.Shelf_idShelf as Shelf2_3_0_, book0_.Book_author as Book3_3_0_, book0_.Book_title as Book4_3_0_, book0_.Book_description as Book5_3_0_, book0_.Book_price as Book6_3_0_, book0_1_.Adventure_informations as Adventur2_0_0_, book0_3_.SF_movie as SF2_2_0_, case when book0_1_.Book_isbn is not null then 1 when book0_2_.Book_isbn is not null then 2 when book0_3_.Book_isbn is not null then 3 when book0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book book0_ left outer join AdventureBook book0_1_ on book0_.Book_isbn=book0_1_.Book_isbn left outer join DramaBook book0_2_ on book0_.Book_isbn=book0_2_.Book_isbn left outer join SFBook book0_3_ on book0_.Book_isbn=book0_3_.Book_isbn where book0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [NONE]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [READ]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [UPGRADE]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [UPGRADE_NOWAIT]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [FORCE]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [PESSIMISTIC_READ]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [PESSIMISTIC_WRITE]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [PESSIMISTIC_FORCE_INCREMENT]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [OPTIMISTIC]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Stand [OPTIMISTIC_FORCE_INCREMENT]: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.java.java_zaliczenie.Stand: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.java.java_zaliczenie.Stand: select stand0_.idStand as idStand1_5_0_, stand0_.Stand_name as Stand2_5_0_ from luki91_java2.Stand stand0_ where stand0_.idStand=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many com.java.java_zaliczenie.Shelf.books: select books0_.Shelf_idShelf as Shelf2_4_1_, books0_.Book_isbn as Book1_3_1_, books0_.Book_isbn as Book1_3_0_, books0_.Shelf_idShelf as Shelf2_3_0_, books0_.Book_author as Book3_3_0_, books0_.Book_title as Book4_3_0_, books0_.Book_description as Book5_3_0_, books0_.Book_price as Book6_3_0_, books0_1_.Adventure_informations as Adventur2_0_0_, books0_3_.SF_movie as SF2_2_0_, case when books0_1_.Book_isbn is not null then 1 when books0_2_.Book_isbn is not null then 2 when books0_3_.Book_isbn is not null then 3 when books0_.Book_isbn is not null then 0 end as clazz_0_ from luki91_java2.Book books0_ left outer join AdventureBook books0_1_ on books0_.Book_isbn=books0_1_.Book_isbn left outer join DramaBook books0_2_ on books0_.Book_isbn=books0_2_.Book_isbn left outer join SFBook books0_3_ on books0_.Book_isbn=books0_3_.Book_isbn where books0_.Shelf_idShelf=?
DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many com.java.java_zaliczenie.Stand.shelfs: select shelfs0_.Stand_idStand as Stand2_5_1_, shelfs0_.idShelf as idShelf1_4_1_, shelfs0_.idShelf as idShelf1_4_0_, shelfs0_.Stand_idStand as Stand2_4_0_, shelfs0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelfs0_ where shelfs0_.Stand_idStand=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bd16ded
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.jndi.spi.JndiService]
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: efee06b5-9c1f-4ea7-bece-19c186fe67d6 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.SessionFactoryImpl - Checking 0 named SQL queries
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.config.spi.ConfigurationService]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
TRACE main org.hibernate.internal.SessionImpl - Opened session at timestamp: 13700421106
TRACE main org.hibernate.internal.SessionImpl - Closing session
TRACE main org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4184b5b0]
TRACE main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Closing logical connection
TRACE main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Logical connection closed
TRACE main org.hibernate.internal.SessionImpl - Opened session at timestamp: 13700421106
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@615e796d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@615e796d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@615e796d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73b61aea
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b293ce0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@456c9182
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2f4a2e75
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2f4a2e75
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2f4a2e75
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@215bfaa5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@215bfaa5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@215bfaa5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5fdb7adc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5fdb7adc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5fdb7adc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@31c1fb39
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@31c1fb39
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31c1fb39
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@539e922d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@539e922d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@539e922d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@f0cb191
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@f0cb191
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f0cb191
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b86616b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b86616b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b86616b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7c3037a0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7c3037a0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@677d8938
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@677d8938
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@d3a0c0b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@d3a0c0b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49940c14
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f4ddd67
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6b439c50
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b439c50
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d91222b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d91222b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3aacbf34
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3aacbf34
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@76f6805b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76f6805b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76f6805b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14ff9e23
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5facc36f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5facc36f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5facc36f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4adde028
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d0d345a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d0d345a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6ea43ee0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ea43ee0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d1ae567
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d1ae567
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@738b19ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@738b19ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@440149a7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@440149a7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7566ca4c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@459a76c9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7f7e9b52
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f7e9b52
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7f7e9b52
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a10b9ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a10b9ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a10b9ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e811049
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@246a641d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@246a641d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@246a641d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@be3606d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@be3606d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@be3606d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1cd65428
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@225c25d9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@276ac534
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@276ac534
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7b24588d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3dcf46c2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dcf46c2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@498dce5b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@498dce5b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b20be93
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1aec9361
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5b40c349
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@434c5ac0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434c5ac0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11498436
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7186fe17
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5593d23b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bcf4b61
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65dfc5e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4638296
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2112481a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@373bb3ec
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
INFO main org.hibernate.Version - HHH000412: Hibernate Core {4.2.1.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
INFO main org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
INFO main org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
TRACE main org.hibernate.cfg.EJB3DTDEntityResolver - Resolving XML entity -//Hibernate/Hibernate Configuration DTD 3.0//EN : http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN main org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
DEBUG main org.hibernate.cfg.Configuration - hibernate.current_session_context_class=thread
DEBUG main org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
DEBUG main org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://luki91.vot.pl:3306/luki91_java2?zeroDateTimeBehavior=convertToNull
DEBUG main org.hibernate.cfg.Configuration - hibernate.connection.username=luki91_java
DEBUG main org.hibernate.cfg.Configuration - hibernate.connection.password=1234
DEBUG main org.hibernate.cfg.Configuration - Session-factory config [null] named resource [com/java/java_zaliczenie/Shelf.hbm.xml] for mapping
INFO main org.hibernate.cfg.Configuration - HHH000221: Reading mappings from resource: com/java/java_zaliczenie/Shelf.hbm.xml
TRACE main org.hibernate.cfg.EJB3DTDEntityResolver - Resolving XML entity -//Hibernate/Hibernate Mapping DTD 3.0//EN : http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
DEBUG main org.hibernate.cfg.Configuration - Session-factory config [null] named resource [com/java/java_zaliczenie/Book.hbm.xml] for mapping
INFO main org.hibernate.cfg.Configuration - HHH000221: Reading mappings from resource: com/java/java_zaliczenie/Book.hbm.xml
TRACE main org.hibernate.cfg.EJB3DTDEntityResolver - Resolving XML entity -//Hibernate/Hibernate Mapping DTD 3.0//EN : http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
DEBUG main org.hibernate.cfg.Configuration - Session-factory config [null] named resource [com/java/java_zaliczenie/Stand.hbm.xml] for mapping
INFO main org.hibernate.cfg.Configuration - HHH000221: Reading mappings from resource: com/java/java_zaliczenie/Stand.hbm.xml
TRACE main org.hibernate.cfg.EJB3DTDEntityResolver - Resolving XML entity -//Hibernate/Hibernate Mapping DTD 3.0//EN : http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
WARN main org.hibernate.internal.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.internal.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
INFO main org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
DEBUG main org.hibernate.cfg.Configuration - Properties: {hibernate.connection.password=1234, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_21\jre\bin, java.vm.version=23.21-b01, hibernate.connection.username=luki91_java, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Luki\Documents\GitHub\java_zaliczenie, java.runtime.version=1.7.0_21-b11, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_21\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Luki\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1250, java.library.path=C:\Program Files\Java\jdk1.7.0_21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Python33\; C:\Program Files\Java\jre7\bin;C:\apache-maven-3.0.5\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Haskell\bin;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\lib\extralibs\bin;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files (x86)\Windows Kits\8.0\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\mingw\bin;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Calibre2\;C:\Users\Luki\AppData\Roaming\cabal\bin;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.2, user.home=C:\Users\Luki, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1250, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=C:\Users\Luki\Documents\GitHub\java_zaliczenie\target\classes;C:\Users\Luki\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Luki\.m2\repository\mysql\mysql-connector-java\5.1.24\mysql-connector-java-5.1.24.jar;C:\Users\Luki\.m2\repository\org\hibernate\hibernate-core\4.2.1.Final\hibernate-core-4.2.1.Final.jar;C:\Users\Luki\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Luki\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Luki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Luki\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Luki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\hibernate\hibernate-entitymanager\4.2.1.Final\hibernate-entitymanager-4.2.1.Final.jar;C:\Users\Luki\.m2\repository\javax\sql\jdbc-stdext\2.0\jdbc-stdext-2.0.jar;C:\Users\Luki\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Luki\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Luki\.m2\repository\net\sf\flexjson\flexjson\3.0\flexjson-3.0.jar;C:\Users\Luki\.m2\repository\org\jvnet\hudson\xstream\1.3.1-hudson-8\xstream-1.3.1-hudson-8.jar;C:\Users\Luki\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar, user.name=Luki, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=com.java.java_zaliczenie.App, java.home=C:\Program Files\Java\jdk1.7.0_21\jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://luki91.vot.pl:3306/luki91_java2?zeroDateTimeBehavior=convertToNull, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=pl, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_21, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_21\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_21\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_21\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
TRACE main org.hibernate.cfg.Configuration - Starting secondPassCompile() processing
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.HbmBinder - Mapping class: com.java.java_zaliczenie.Shelf -> Shelf
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: idShelf -> idShelf
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: stand -> Stand_idStand
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: shelfName -> Shelf_name
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: books
DEBUG main org.hibernate.cfg.HbmBinder - Mapping class: com.java.java_zaliczenie.Book -> Book
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: bookIsbn -> Book_isbn
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: shelf -> Shelf_idShelf
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: bookAuthor -> Book_author
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: bookTitle -> Book_title
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: bookDescription -> Book_description
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: bookPrice -> Book_price
DEBUG main org.hibernate.cfg.HbmBinder - Mapping joined-subclass: com.java.java_zaliczenie.AdventureBook -> AdventureBook
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: adventureInformations -> Adventure_informations
DEBUG main org.hibernate.cfg.HbmBinder - Mapping joined-subclass: com.java.java_zaliczenie.DramaBook -> DramaBook
DEBUG main org.hibernate.cfg.HbmBinder - Mapping joined-subclass: com.java.java_zaliczenie.Sfbook -> SFBook
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: sfMovie -> SF_movie
DEBUG main org.hibernate.cfg.HbmBinder - Mapping class: com.java.java_zaliczenie.Stand -> Stand
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: idStand -> idStand
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: standName -> Stand_name
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: shelfs
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.CollectionSecondPass - Second pass for collection: com.java.java_zaliczenie.Shelf.books
DEBUG main org.hibernate.cfg.HbmBinder - Mapping collection: com.java.java_zaliczenie.Shelf.books -> Book
DEBUG main org.hibernate.cfg.CollectionSecondPass - Mapped collection key: Shelf_idShelf, one-to-many: com.java.java_zaliczenie.Book
DEBUG main org.hibernate.cfg.CollectionSecondPass - Second pass for collection: com.java.java_zaliczenie.Stand.shelfs
DEBUG main org.hibernate.cfg.HbmBinder - Mapping collection: com.java.java_zaliczenie.Stand.shelfs -> Shelf
DEBUG main org.hibernate.cfg.CollectionSecondPass - Mapped collection key: Stand_idStand, one-to-many: com.java.java_zaliczenie.Shelf
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: com.java.java_zaliczenie.Book
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: com.java.java_zaliczenie.Book
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: com.java.java_zaliczenie.Book
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: com.java.java_zaliczenie.Shelf
DEBUG main org.hibernate.cfg.Configuration - Resolving reference to class: com.java.java_zaliczenie.Stand
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.jdbc.connections.spi.ConnectionProvider]
INFO main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
INFO main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
INFO main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
INFO main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://luki91.vot.pl:3306/luki91_java2?zeroDateTimeBehavior=convertToNull]
INFO main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=luki91_java, password=1234}
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.jdbc.dialect.spi.DialectFactory]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.jdbc.dialect.spi.DialectResolver]
TRACE main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Total checked-out connections: 0
DEBUG main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Opening new JDBC connection
DEBUG main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://luki91.vot.pl:3306/luki91_java2?zeroDateTimeBehavior=convertToNull, Isolation Level: 4
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.1.65
      major : 5
      minor : 1
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.24 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
TRACE main org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Returning connection to pool, pool size: 1
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.jta.platform.spi.JtaPlatform]
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.spi.TransactionFactory]
INFO main org.hibernate.engine.transaction.internal.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
TRACE main org.hibernate.loader.BatchFetchStyle - Interpreting BatchFetchStyle from setting : null
DEBUG main org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default null ordering: none
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
TRACE main org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@25d480f6
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=1234, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_21\jre\bin, java.vm.version=23.21-b01, hibernate.connection.username=luki91_java, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=PL, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Luki\Documents\GitHub\java_zaliczenie, java.runtime.version=1.7.0_21-b11, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=thread, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_21\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Luki\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=Cp1250, java.library.path=C:\Program Files\Java\jdk1.7.0_21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Python33\; C:\Program Files\Java\jre7\bin;C:\apache-maven-3.0.5\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Haskell\bin;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\lib\extralibs\bin;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files (x86)\Windows Kits\8.0\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Haskell Platform\2012.4.0.0\mingw\bin;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Calibre2\;C:\Users\Luki\AppData\Roaming\cabal\bin;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.2, user.home=C:\Users\Luki, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=Cp1250, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=Luki, java.class.path=C:\Users\Luki\Documents\GitHub\java_zaliczenie\target\classes;C:\Users\Luki\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Luki\.m2\repository\mysql\mysql-connector-java\5.1.24\mysql-connector-java-5.1.24.jar;C:\Users\Luki\.m2\repository\org\hibernate\hibernate-core\4.2.1.Final\hibernate-core-4.2.1.Final.jar;C:\Users\Luki\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Luki\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Luki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Luki\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Luki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Luki\.m2\repository\org\hibernate\hibernate-entitymanager\4.2.1.Final\hibernate-entitymanager-4.2.1.Final.jar;C:\Users\Luki\.m2\repository\javax\sql\jdbc-stdext\2.0\jdbc-stdext-2.0.jar;C:\Users\Luki\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Luki\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Luki\.m2\repository\net\sf\flexjson\flexjson\3.0\flexjson-3.0.jar;C:\Users\Luki\.m2\repository\org\jvnet\hudson\xstream\1.3.1-hudson-8\xstream-1.3.1-hudson-8.jar;C:\Users\Luki\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.7.0_21\jre, sun.java.command=com.java.java_zaliczenie.App, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://luki91.vot.pl:3306/luki91_java2?zeroDateTimeBehavior=convertToNull, java.specification.vendor=Oracle Corporation, user.language=pl, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_21, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_21\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_21\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_21\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_21\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
TRACE main org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf], existing type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)], incoming type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookAuthor], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookTitle], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookDescription], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookPrice], existing type = [org.hibernate.type.BigDecimalType@7c3037a0], incoming type = [org.hibernate.type.BigDecimalType@7c3037a0]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.DramaBook
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select Book_isbn from luki91_java2.Book where Book_isbn =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select dramabook_.Book_isbn, dramabook_1_.Shelf_idShelf as Shelf2_3_, dramabook_1_.Book_author as Book3_3_, dramabook_1_.Book_title as Book4_3_, dramabook_1_.Book_description as Book5_3_, dramabook_1_.Book_price as Book6_3_ from DramaBook dramabook_ inner join luki91_java2.Book dramabook_1_ on dramabook_.Book_isbn=dramabook_1_.Book_isbn where dramabook_.Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Book (Shelf_idShelf, Book_author, Book_title, Book_description, Book_price, Book_isbn) values (?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Book set Shelf_idShelf=?, Book_author=?, Book_title=?, Book_description=?, Book_price=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Book where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 1: insert into DramaBook (Book_isbn) values (?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 1: null
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 1: delete from DramaBook where Book_isbn=?
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf], existing type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)], incoming type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookAuthor], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookTitle], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookDescription], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookPrice], existing type = [org.hibernate.type.BigDecimalType@7c3037a0], incoming type = [org.hibernate.type.BigDecimalType@7c3037a0]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [adventureInformations], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.AdventureBook
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select Book_isbn from luki91_java2.Book where Book_isbn =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select adventureb_.Book_isbn, adventureb_1_.Shelf_idShelf as Shelf2_3_, adventureb_1_.Book_author as Book3_3_, adventureb_1_.Book_title as Book4_3_, adventureb_1_.Book_description as Book5_3_, adventureb_1_.Book_price as Book6_3_, adventureb_.Adventure_informations as Adventur2_0_ from AdventureBook adventureb_ inner join luki91_java2.Book adventureb_1_ on adventureb_.Book_isbn=adventureb_1_.Book_isbn where adventureb_.Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Book (Shelf_idShelf, Book_author, Book_title, Book_description, Book_price, Book_isbn) values (?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Book set Shelf_idShelf=?, Book_author=?, Book_title=?, Book_description=?, Book_price=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Book where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 1: insert into AdventureBook (Adventure_informations, Book_isbn) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 1: update AdventureBook set Adventure_informations=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 1: delete from AdventureBook where Book_isbn=?
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf], existing type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)], incoming type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookAuthor], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookTitle], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookDescription], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookPrice], existing type = [org.hibernate.type.BigDecimalType@7c3037a0], incoming type = [org.hibernate.type.BigDecimalType@7c3037a0]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [sfMovie], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.Sfbook
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select Book_isbn from luki91_java2.Book where Book_isbn =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select sfbook_.Book_isbn, sfbook_1_.Shelf_idShelf as Shelf2_3_, sfbook_1_.Book_author as Book3_3_, sfbook_1_.Book_title as Book4_3_, sfbook_1_.Book_description as Book5_3_, sfbook_1_.Book_price as Book6_3_, sfbook_.SF_movie as SF2_2_ from SFBook sfbook_ inner join luki91_java2.Book sfbook_1_ on sfbook_.Book_isbn=sfbook_1_.Book_isbn where sfbook_.Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Book (Shelf_idShelf, Book_author, Book_title, Book_description, Book_price, Book_isbn) values (?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Book set Shelf_idShelf=?, Book_author=?, Book_title=?, Book_description=?, Book_price=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Book where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 1: insert into SFBook (SF_movie, Book_isbn) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 1: update SFBook set SF_movie=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 1: delete from SFBook where Book_isbn=?
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf], existing type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)], incoming type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Shelf)]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelf.idShelf], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookAuthor], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookTitle], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookDescription], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [bookPrice], existing type = [org.hibernate.type.BigDecimalType@7c3037a0], incoming type = [org.hibernate.type.BigDecimalType@7c3037a0]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [adventureInformations], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [sfMovie], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.Book
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select Book_isbn from luki91_java2.Book where Book_isbn =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select book_.Book_isbn, book_.Shelf_idShelf as Shelf2_3_, book_.Book_author as Book3_3_, book_.Book_title as Book4_3_, book_.Book_description as Book5_3_, book_.Book_price as Book6_3_ from luki91_java2.Book book_ where book_.Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Book (Shelf_idShelf, Book_author, Book_title, Book_description, Book_price, Book_isbn) values (?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Book set Shelf_idShelf=?, Book_author=?, Book_title=?, Book_description=?, Book_price=? where Book_isbn=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Book where Book_isbn=?
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.idStand], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand], existing type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Stand)], incoming type = [org.hibernate.type.ManyToOneType(com.java.java_zaliczenie.Stand)]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.id], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.idStand], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [stand.idStand], existing type = [org.hibernate.type.IntegerType@31c1fb39], incoming type = [org.hibernate.type.IntegerType@31c1fb39]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelfName], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [books], existing type = [org.hibernate.type.SetType(com.java.java_zaliczenie.Shelf.books)], incoming type = [org.hibernate.type.SetType(com.java.java_zaliczenie.Shelf.books)]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.Shelf
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select idShelf from luki91_java2.Shelf where idShelf =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select shelf_.idShelf, shelf_.Stand_idStand as Stand2_4_, shelf_.Shelf_name as Shelf3_4_ from luki91_java2.Shelf shelf_ where shelf_.idShelf=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Shelf (Stand_idStand, Shelf_name, idShelf) values (?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Shelf set Stand_idStand=?, Shelf_name=? where idShelf=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Shelf where idShelf=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into luki91_java2.Shelf (Stand_idStand, Shelf_name) values (?, ?)
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [standName], existing type = [org.hibernate.type.StringType@d3a0c0b], incoming type = [org.hibernate.type.StringType@d3a0c0b]
TRACE main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [shelfs], existing type = [org.hibernate.type.SetType(com.java.java_zaliczenie.Stand.shelfs)], incoming type = [org.hibernate.type.SetType(com.java.java_zaliczenie.Stand.shelfs)]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.java.java_zaliczenie.Stand
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select idStand from luki91_java2.Stand where idStand =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select stand_.idStand, stand_.Stand_name as Stand2_5_ from luki91_java2.Stand stand_ where stand_.idStand=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into luki91_java2.Stand (Stand_name, idStand) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update luki91_java2.Stand set Stand_name=? where idStand=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from luki91_java2.Stand where idStand=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into luki91_java2.Stand (Stand_name) values (?)
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: com.java.java_zaliczenie.Shelf.books
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update luki91_java2.Book set Shelf_idShelf=? where Book_isbn=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update luki91_java2.Book set  where Book_isbn=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update luki91_java2.Book set Shelf_idShelf=null where Shelf_idShelf=? and Book_isbn=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update luki91_java2.Book set Shelf_idShelf=null where Shelf_idShelf=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: com.java.java_zaliczenie.Stand.shelfs
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update luki91_java2.Shelf set Stand_idStand=? where idShelf=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update luki91_java2.Shelf set  where idShelf=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update luki91_java2.Shelf set Stand_idStand=null where Stand_idStand=? and idShelf=?
DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update luki91_java2.Shelf set Stand_idStand=null where Stand_idStand=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [NONE]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [READ]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [UPGRADE]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [UPGRADE_NOWAIT]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [FORCE]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [PESSIMISTIC_READ]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [PESSIMISTIC_WRITE]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [PESSIMISTIC_FORCE_INCREMENT]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [OPTIMISTIC]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.DramaBook [OPTIMISTIC_FORCE_INCREMENT]: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.java.java_zaliczenie.DramaBook: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.java.java_zaliczenie.DramaBook: select dramabook0_.Book_isbn as Book1_3_0_, dramabook0_1_.Shelf_idShelf as Shelf2_3_0_, dramabook0_1_.Book_author as Book3_3_0_, dramabook0_1_.Book_title as Book4_3_0_, dramabook0_1_.Book_description as Book5_3_0_, dramabook0_1_.Book_price as Book6_3_0_ from DramaBook dramabook0_ inner join luki91_java2.Book dramabook0_1_ on dramabook0_.Book_isbn=dramabook0_1_.Book_isbn where dramabook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [NONE]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [READ]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [UPGRADE]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [UPGRADE_NOWAIT]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [FORCE]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [PESSIMISTIC_READ]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [PESSIMISTIC_WRITE]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [PESSIMISTIC_FORCE_INCREMENT]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [OPTIMISTIC]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.AdventureBook [OPTIMISTIC_FORCE_INCREMENT]: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.java.java_zaliczenie.AdventureBook: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.java.java_zaliczenie.AdventureBook: select adventureb0_.Book_isbn as Book1_3_0_, adventureb0_1_.Shelf_idShelf as Shelf2_3_0_, adventureb0_1_.Book_author as Book3_3_0_, adventureb0_1_.Book_title as Book4_3_0_, adventureb0_1_.Book_description as Book5_3_0_, adventureb0_1_.Book_price as Book6_3_0_, adventureb0_.Adventure_informations as Adventur2_0_0_ from AdventureBook adventureb0_ inner join luki91_java2.Book adventureb0_1_ on adventureb0_.Book_isbn=adventureb0_1_.Book_isbn where adventureb0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [NONE]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [READ]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [UPGRADE]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [UPGRADE_NOWAIT]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [FORCE]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [PESSIMISTIC_READ]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [PESSIMISTIC_WRITE]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [PESSIMISTIC_FORCE_INCREMENT]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [OPTIMISTIC]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Sfbook [OPTIMISTIC_FORCE_INCREMENT]: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.java.java_zaliczenie.Sfbook: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.java.java_zaliczenie.Sfbook: select sfbook0_.Book_isbn as Book1_3_0_, sfbook0_1_.Shelf_idShelf as Shelf2_3_0_, sfbook0_1_.Book_author as Book3_3_0_, sfbook0_1_.Book_title as Book4_3_0_, sfbook0_1_.Book_description as Book5_3_0_, sfbook0_1_.Book_price as Book6_3_0_, sfbook0_.SF_movie as SF2_2_0_ from SFBook sfbook0_ inner join luki91_java2.Book sfbook0_1_ on sfbook0_.Book_isbn=sfbook0_1_.Book_isbn where sfbook0_.Book_isbn=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [NONE]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [READ]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=?
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [UPGRADE]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [UPGRADE_NOWAIT]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [FORCE]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=? for update
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [PESSIMISTIC_READ]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=? lock in share mode
DEBUG main org.hibernate.loader.Loader - Static select for entity com.java.java_zaliczenie.Shelf [PESSIMISTIC_WRITE]: select shelf0_.idShelf as idShelf1_4_0_, shelf0_.Stand_idStand as Stand2_4_0_, shelf0_.Shelf_name as Shelf3_4_0_ from luki91_java2.Shelf shelf0_ where shelf0_.idShelf=? for update
